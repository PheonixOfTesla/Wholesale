#!/bin/bash

# Find the line with "printContract() {" and add Hot Deals methods after it
awk '
/printContract\(\) {/ {
    print
    in_function = 1
    next
}
in_function && /^            }$/ {
    print
    in_function = 0
    print ""
    print "            // === HOT DEALS MANAGEMENT ==="
    print "            scanHotDeals() {"
    print "                const zip = document.getElementById(\"hotdeals-zip\").value || \"32801\";"
    print "                const radius = parseInt(document.getElementById(\"hotdeals-radius\").value) || 100;"
    print "                const minProfit = parseFloat(document.getElementById(\"hotdeals-minprofit\").value) || 10000;"
    print "                const minScore = parseInt(document.getElementById(\"hotdeals-minscore\").value) || 70;"
    print "                "
    print "                this.showNotification(\"Scanning for hot deals...\", \"success\");"
    print "                const deals = this.generateHotDeals(zip, radius, minProfit, minScore);"
    print "                this.renderHotDeals(deals);"
    print "                this.updateHotDealsMetrics(deals);"
    print "                this.showNotification(\"Found \" + deals.length + \" hot deals!\", \"success\");"
    print "            }"
    print "            "
    print "            generateHotDeals(centerZip, radius, minProfit, minScore) {"
    print "                const sources = [\"Foreclosure\", \"Tax Lien\", \"Estate Sale\", \"Expired MLS\", \"Absentee Owner\"];"
    print "                const streets = [\"Main\", \"Oak\", \"Elm\", \"Park\", \"First\", \"Maple\", \"Cedar\", \"Pine\"];"
    print "                const cities = [\"Orlando\", \"Tampa\", \"Jacksonville\", \"Miami\", \"Lakeland\"];"
    print "                const deals = [];"
    print "                const dealCount = Math.floor(Math.random() * 15) + 10;"
    print "                "
    print "                for (let i = 0; i < dealCount; i++) {"
    print "                    const arv = Math.floor(Math.random() * 350000) + 150000;"
    print "                    const repairs = Math.floor(arv * (Math.random() * 0.3 + 0.05));"
    print "                    const assignmentFee = minProfit + Math.floor(Math.random() * 10000);"
    print "                    const mao = Math.floor(arv * 0.7) - repairs - assignmentFee;"
    print "                    "
    print "                    let score = 0;"
    print "                    if (assignmentFee >= 20000) score += 40;"
    print "                    else if (assignmentFee >= 15000) score += 30;"
    print "                    else if (assignmentFee >= 10000) score += 20;"
    print "                    "
    print "                    const motivation = Math.floor(Math.random() * 10) + 1;"
    print "                    score += motivation >= 8 ? 30 : motivation >= 6 ? 20 : 10;"
    print "                    "
    print "                    const daysOnMarket = Math.floor(Math.random() * 120);"
    print "                    if (daysOnMarket <= 30) score += 20;"
    print "                    "
    print "                    const source = sources[Math.floor(Math.random() * sources.length)];"
    print "                    if (source === \"Foreclosure\" || source === \"Tax Lien\") score += 10;"
    print "                    "
    print "                    if (score >= minScore && assignmentFee >= minProfit) {"
    print "                        deals.push({"
    print "                            id: this.generateId(),"
    print "                            address: Math.floor(Math.random() * 9999) + \" \" + streets[Math.floor(Math.random() * streets.length)] + \" St, \" + cities[Math.floor(Math.random() * cities.length)] + \", FL\"," 
    print "                            distance: Math.floor(Math.random() * radius),"
    print "                            source: source,"
    print "                            arv: arv,"
    print "                            repairs: repairs,"
    print "                            mao: mao,"
    print "                            profit: assignmentFee,"
    print "                            score: Math.min(score, 100)"
    print "                        });"
    print "                    }"
    print "                }"
    print "                "
    print "                return deals.sort((a, b) => b.score - a.score);"
    print "            }"
    print "            "
    print "            renderHotDeals(deals) {"
    print "                const tbody = document.getElementById(\"hotDealsTable\");"
    print "                if (!tbody) return;"
    print "                "
    print "                if (deals.length === 0) {"
    print "                    tbody.innerHTML = \"<tr><td colspan=8 style=text-align:center;padding:40px;>No deals found. Adjust filters.</td></tr>\";"
    print "                    return;"
    print "                }"
    print "                "
    print "                tbody.innerHTML = deals.map(deal => {"
    print "                    const scoreColor = deal.score >= 80 ? \"#10b981\" : deal.score >= 60 ? \"#f59e0b\" : \"#6b7280\";"
    print "                    return \"<tr><td style=font-size:24px;font-weight:bold;color:\" + scoreColor + \";>\" + deal.score + \"</td><td>\" + deal.address + \"</td><td>\" + deal.distance + \" mi</td><td>\" + deal.source + \"</td><td>$\" + deal.arv.toLocaleString() + \"</td><td>$\" + deal.mao.toLocaleString() + \"</td><td style=color:#10b981;>$\" + deal.profit.toLocaleString() + \"</td><td><button class=\\\"btn btn-primary\\\" onclick=\\\"app.addHotDealToLeads(\" + deal.id + \")\\\" style=\\\"padding:5px 10px;\\\">Add</button></td></tr>\";"
    print "                }).join(\"\");"
    print "                "
    print "                this.hotDeals = deals;"
    print "            }"
    print "            "
    print "            updateHotDealsMetrics(deals) {"
    print "                if (deals.length === 0) {"
    print "                    this.updateElement(\"hottestDeal\", \"-\");"
    print "                    this.updateElement(\"dealsFound\", \"0\");"
    print "                    this.updateElement(\"avgScore\", \"0\");"
    print "                    this.updateElement(\"totalProfit\", \"$0\");"
    print "                    return;"
    print "                }"
    print "                "
    print "                const hottestDeal = deals[0];"
    print "                const avgScore = Math.round(deals.reduce((sum, d) => sum + d.score, 0) / deals.length);"
    print "                const totalProfit = deals.reduce((sum, d) => sum + d.profit, 0);"
    print "                "
    print "                this.updateElement(\"hottestDeal\", \"Score: \" + hottestDeal.score);"
    print "                this.updateElement(\"dealsFound\", deals.length);"
    print "                this.updateElement(\"avgScore\", avgScore);"
    print "                this.updateElement(\"totalProfit\", \"$\" + totalProfit.toLocaleString());"
    print "            }"
    print "            "
    print "            addHotDealToLeads(dealId) {"
    print "                const deal = this.hotDeals?.find(d => d.id === dealId);"
    print "                if (!deal) return;"
    print "                "
    print "                const leadData = {"
    print "                    id: this.generateId(),"
    print "                    address: deal.address,"
    print "                    owner: deal.source + \" Property\","
    print "                    phone: \"(555) 555-0000\","
    print "                    arv: deal.arv,"
    print "                    repairs: deal.repairs,"
    print "                    assignmentFee: deal.profit,"
    print "                    status: \"new\","
    print "                    notes: \"Hot Deal - Score: \" + deal.score + \"/100\","
    print "                    followup: new Date(Date.now() + 86400000).toISOString().split(\"T\")[0],"
    print "                    dateAdded: new Date().toISOString(),"
    print "                    mao: deal.mao"
    print "                };"
    print "                "
    print "                this.data.leads.push(leadData);"
    print "                this.saveData();"
    print "                this.showNotification(\"Hot deal added to leads!\", \"success\");"
    print "                this.switchTab(\"leads\");"
    print "            }"
    next
}
{
    print
}
' index.html > index_with_hotdeals.html

mv index_with_hotdeals.html index.html
echo "âœ… Hot Deals functionality added!"
